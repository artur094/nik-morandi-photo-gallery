version: '3'
services:
  frontend:
    image: ${FRONTEND_IMAGE}
    restart: unless-stopped
    networks:
      - default
      - traefik-network
    labels:
      # Frontend
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-network"
      - "traefik.http.routers.nicolamorandi-frontend-production.rule=Host(`nicolamorandi.morandizzi.com`)"
      - "traefik.http.routers.nicolamorandi-frontend-production.entrypoints=websecure"
      - "traefik.http.routers.nicolamorandi-frontend-production.tls=true"
      - "traefik.http.routers.nicolamorandi-frontend-production.service=nicolamorandi-frontend-production"
      - "traefik.http.services.nicolamorandi-frontend-production.loadbalancer.server.port=80"
      - "traefik.http.routers.nicolamorandi-frontend-production.tls.certresolver=le"
      - "traefik.http.routers.nicolamorandi-frontend-production.tls.domains[0].main=nicolamorandi.morandizzi.com"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.nicolamorandi-frontend-production.middlewares=redirect-to-https@docker"

  backend:
    image: ${BACKEND_IMAGE}
    restart: unless-stopped
    environment:
      - CORS_ALLOWED_ORIGINS=https://nicolamorandi.morandizzi.com
      - CSRF_TRUSTED_ORIGINS=https://nicolamorandi.morandizzi.com
      - HOST=nicolamorandi.morandizzi.com
      - DATABASE_URL=psql://nicolamorandi:${DATABASE_PASSWORD}@db/nicolamorandi
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - DEBUG=False
    command: gunicorn backend.wsgi:application --bind 0.0.0.0:8000 --workers 2 --timeout 120
    depends_on:
      - db
    volumes:
      - backend_media:/usr/src/app/media
      - backend_static:/usr/src/app/static
      - backend_logs:/usr/src/app/logs

  backend-nginx:
    image: nginx:1.23.1-alpine
    volumes:
      - ../backend/nginx.conf:/etc/nginx/conf.d/default.conf
      - backend_media:/mediafiles
      - backend_static:/staticfiles
    depends_on:
      - backend
    networks:
      - default
      - traefik-network
    labels:
      # Backend
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-network"
      - "traefik.http.routers.nicolamorandi-backend-production.rule=Host(`nicolamorandi.morandizzi.com`) && (PathPrefix(`/admin`) || PathPrefix(`/api`) || PathPrefix(`/static`)  || PathPrefix(`/media`))"
      - "traefik.http.routers.nicolamorandi-backend-production.entrypoints=websecure"
      - "traefik.http.routers.nicolamorandi-backend-production.tls=true"
      - "traefik.http.routers.nicolamorandi-backend-production.service=nicolamorandi-backend-production"
      - "traefik.http.services.nicolamorandi-backend-production.loadbalancer.server.port=80"
      - "traefik.http.routers.nicolamorandi-backend-production.tls.certresolver=le"
      - "traefik.http.routers.nicolamorandi-backend-production.tls.domains[0].main=nicolamorandi.morandizzi.com"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.nicolamorandi-backend-production.middlewares=redirect-to-https@docker"

  db:
    image: postgres
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: nicolamorandi
      POSTGRES_USER: nicolamorandi
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata

  backups:
      image: prodrigestivill/postgres-backup-local
      restart: always
      user: postgres:postgres # Optional: see below
      volumes:
          - /var/opt/pgbackups:/backups
      links:
          - db
      depends_on:
          - db
      environment:
          - POSTGRES_HOST=db
          - POSTGRES_DB=nicolamorandi
          - POSTGRES_USER=nicolamorandi
          - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
       #  - POSTGRES_PASSWORD_FILE=/run/secrets/db_password <-- alternative for POSTGRES_PASSWORD (to use with docker secrets)
          - POSTGRES_EXTRA_OPTS=-Z6 --schema=public --blobs
          - SCHEDULE=@daily
          - BACKUP_KEEP_DAYS=7
          - BACKUP_KEEP_WEEKS=4
          - BACKUP_KEEP_MONTHS=6
          - HEALTHCHECK_PORT=8080

networks:
  traefik-network:
    external: true

volumes:
  postgres_data:
  backend_media:
  backend_static:
  backend_logs:
